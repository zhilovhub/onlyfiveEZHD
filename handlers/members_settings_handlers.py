from supporting_functions import *
from states import States


class MembersSettingsHandlers(SupportingFunctions):
    def __init__(self, token: str, group_id: int, user_db: UserDataCommands,
                 classroom_db: ClassroomCommands, technical_support_db: TechnicalSupportCommands,
                 diary_homework_db: DiaryHomeworkCommands, role_db: RoleCommands) -> None:
        """Initialization"""
        super().__init__(token=token, group_id=group_id, user_db=user_db, classroom_db=classroom_db,
                         technical_support_db=technical_support_db, diary_homework_db=diary_homework_db,
                         role_db=role_db)

    def s_members_settings_handler(self, user_id: int, payload: dict) -> None:
        """Handling States.S_MEMBERS_SETTINGS"""
        if payload is None:
            self.send_message(user_id, "–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏!üëáüèª", self.get_keyboard("members_settings"))

        elif payload["text"] == "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–æ–ª–∏":
            classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
            admin_role_name = self.role_db.get_admin_role_name(classroom_id)
            default_role_name = self.role_db.get_default_role_name(classroom_id)
            all_role_names = self.role_db.get_all_role_names_from_classroom(classroom_id)
            role_names_text = self.get_all_role_names_text(all_role_names, admin_role_name, default_role_name)

            self.send_message(user_id, f"{role_names_text}\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–æ–ª–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç—Ä–æ–≤–∞–Ω–∏—è:",
                              self.get_keyboard("back_menu"))
            self.user_db.set_user_dialog_state(user_id, States.S_CHOOSE_ROLE_EDIT_ROLE_MEMBERS_SETTINGS.value)

        elif payload["text"] == "–ù–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª–∏":
            classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
            admin_role_name = self.role_db.get_admin_role_name(classroom_id)
            default_role_name = self.role_db.get_default_role_name(classroom_id)
            all_role_names = self.role_db.get_all_role_names_from_classroom(classroom_id)
            role_names_text = self.get_all_role_names_text(all_role_names, admin_role_name, default_role_name)

            self.send_message(user_id, f"{role_names_text}\n\n–í–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–æ–ª–∏, –Ω–∞–∑–Ω–∞—á–∞—Ç—å –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ:",
                              self.get_keyboard("back_menu"))
            self.user_db.set_user_dialog_state(user_id, States.S_CHOOSE_ROLE_MEMBERS_SETTINGS.value)

        elif payload["text"] == "–£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞":
            classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
            roles_dictionary = self.classroom_db.get_dict_of_classroom_roles(classroom_id)
            members_text = self.get_members_text(roles_dictionary)

            self.send_message(user_id, f"{members_text}\n\n–í–ø–∏—à–∏ –Ω–æ–º–µ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å:",
                              self.get_keyboard("back_menu"))
            self.user_db.set_user_dialog_state(user_id, States.S_DELETE_MEMBER_MEMBERS_SETTINGS.value)

        elif payload["text"] == "–£–¥–∞–ª–∏—Ç—å —Ä–æ–ª–∏":
            classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
            admin_role_name = self.role_db.get_admin_role_name(classroom_id)
            default_role_name = self.role_db.get_default_role_name(classroom_id)
            all_role_names = self.role_db.get_all_role_names_from_classroom(classroom_id)
            role_names_text = self.get_all_role_names_text(all_role_names, admin_role_name, default_role_name)

            if len(all_role_names) > 2:
                self.send_message(user_id, f"–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å —Ä–æ–ª—å—é, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —É–¥–∞–ª–∏—Ç–µ, –≤–æ–∑—å–º—É—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—É—é —Ä–æ–ª—å\n"
                                           f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:\n\n{role_names_text}",
                                  self.get_keyboard("back_menu"))
                self.user_db.set_user_dialog_state(user_id, States.S_DELETE_ROLE_MEMBERS_SETTINGS.value)
            else:
                self.send_message(user_id, f"–í –∫–ª–∞—Å—Å–µ –Ω–µ—Ç —Ä–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã —É–¥–∞–ª–∏—Ç—å!\n\n{role_names_text}",
                                  self.get_keyboard("members_settings"))

        elif payload["text"] == "–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª–∏":
            classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
            admin_role_name = self.role_db.get_admin_role_name(classroom_id)
            default_role_name = self.role_db.get_default_role_name(classroom_id)
            all_role_names = self.role_db.get_all_role_names_from_classroom(classroom_id)
            role_names_text = self.get_all_role_names_text(all_role_names, admin_role_name, default_role_name)

            if len(all_role_names) < 8:
                self.send_message(user_id, "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π\n\n–í –∫–ª–∞—Å—Å–µ "
                                           "–º–æ–∂–µ—Ç –±—ã—Ç—å –º–∞–∫—Å–∏–º—É–º 8 —Ä–æ–ª–µ–π, –Ω–æ –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å –º–∏–Ω–∏–º—É–º 2 (–∞–¥–º–∏–Ω, —É—á–∞—Å—Ç–Ω–∏–∫)"
                                           ". –†–æ–ª—å –∞–¥–º–∏–Ω–∞ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –∫–ª–∞—Å—Å–∞, —ç—Ç–∞ —Ä–æ–ª—å –∏–º–µ–µ—Ç –≤—Å–µ "
                                           "–ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏\n\n–†–æ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø–æ–ª—É—á–∞—é—Ç —Ç–µ, –∫—Ç–æ —Ç–æ–ª—å–∫–æ-—Ç–æ–ª—å–∫–æ –≤–æ—à–ª–∏ –≤ –∫–ª–∞—Å—Å. "
                                           " –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —ç—Ç–∞ —Ä–æ–ª—å —Ç–∞–∫–∂–µ –∏–º–µ–µ—Ç –≤—Å–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –∫–ª–∞—Å—Å–∞, –∫—Ä–æ–º–µ —É–¥–∞–ª–µ–Ω–∏—è "
                                           "–∫–ª–∞—Å—Å–∞ –∏ –∫–∏–∫–∞–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n\n–†–µ–∫–æ–º–µ–¥—É–µ—Ç—Å—è –Ω–∞—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–ª–µ–π —Å "
                                           "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –≤–µ–¥—å —ç—Ç—É —Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
                                           " –±—É–¥—É—Ç –∏–º–µ—Ç—å –≤—Å–µ –Ω–æ–≤–µ–Ω—å–∫–∏–µ –≤ –∫–ª–∞—Å—Å–µ\n\n"
                                           f"–¢–µ–∫—É—â–∏–µ —Ä–æ–ª–∏:\n{role_names_text}\n\n–í–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ä–æ–ª–∏ (–º–∞–∫—Å. "
                                           f"20 —Å–∏–º–≤–æ–ª–æ–≤), –æ–Ω–∞ "
                                           f"–≤–æ–∑—å–º—ë—Ç –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ —Ä–æ–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ (–ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –Ω–æ–≤–æ–π —Ä–æ–ª–∏ –º–æ–∂–Ω–æ "
                                           f"–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å):", self.get_keyboard("back_menu"))
                self.user_db.set_user_dialog_state(user_id, States.S_ADD_ROLE_ENTER_NAME_MEMBERS_SETTINGS.value)
            else:
                self.send_message(user_id, f"–í—ã —ç—Ç–æ–º –∫–ª–∞—Å—Å–µ —É–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ —Ä–æ–ª–µ–π - 8!\n\n{role_names_text}",
                                  self.get_keyboard("members_settings"))

        elif payload["text"] == "–ù–∞–∑–∞–¥":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é –∫–ª–∞—Å—Å–∞...", self.get_keyboard("my_class_menu"))
            self.user_db.set_user_dialog_state(user_id, States.S_IN_CLASS_MYCLASSES.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

    def s_add_role_enter_name_members_settings_handler(self, user_id: int, message: str,  payload: dict) -> None:
        """Handling States.S_ADD_ROLE_ENTER_NAME_MEMBERS_SETTINGS"""
        if payload is None:
            if len(message) <= 20:
                classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
                old_role_names = self.role_db.get_all_role_names_from_classroom(classroom_id)

                if message not in old_role_names:
                    self.role_db.insert_new_role(classroom_id, message.strip())
                    role_names = self.role_db.get_all_role_names_from_classroom(classroom_id)
                    role_names_text = "\n".join(
                        [f"{ind}. {role_name}" for ind, role_name in enumerate(role_names, start=1)])

                    self.send_message(user_id, f"–ù–æ–≤–∞—è —Ä–æ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n\n{role_names_text}",
                                      self.get_keyboard("members_settings"))
                    self.user_db.set_user_dialog_state(user_id, States.S_MEMBERS_SETTINGS.value)
                else:
                    self.send_message(user_id, "–†–æ–ª—å —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —ç—Ç–æ–º –∫–ª–∞—Å—Å–µ.\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ "
                                               "–Ω–∞–∑–≤–∞–Ω–∏–µ:", self.get_keyboard("back_menu"))
            else:
                self.send_message(user_id, "–î–ª–∏–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –±–æ–ª—å—à–µ 20 —Å–∏–º–≤–æ–ª–æ–≤. –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:",
                                  self.get_keyboard("back_menu"))

        elif payload["text"] == "–ù–∞–∑–∞–¥":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤...", self.get_keyboard("members_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MEMBERS_SETTINGS.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

    def s_delete_role_members_settings_handler(self, user_id: int, message: str,  payload: dict) -> None:
        """Handling States.S_DELETE_ROLE_MEMBERS_SETTINGS"""
        if payload is None:
            ask_message = "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–æ–ª–∏, —É–¥–∞–ª–∏—Ç—å –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ:"

            if message.isdigit():
                classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
                role_index = int(message)
                all_role_names = self.role_db.get_all_role_names_from_classroom(classroom_id)

                if 0 < role_index <= len(all_role_names):
                    admin_role_name = self.role_db.get_admin_role_name(classroom_id)
                    default_role_name = self.role_db.get_default_role_name(classroom_id)
                    role_name = all_role_names[role_index - 1]

                    if role_name != admin_role_name and role_name != default_role_name:
                        default_role_id = self.role_db.get_default_role_id(classroom_id)
                        role_id = self.role_db.get_role_id_by_name(classroom_id, role_name)

                        self.role_db.update_all_roles(role_id, default_role_id)
                        self.role_db.delete_role(role_id)

                        self.send_message(user_id, "–†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞!", self.get_keyboard("members_settings"))
                        self.user_db.set_user_dialog_state(user_id, States.S_MEMBERS_SETTINGS.value)
                    else:
                        self.send_message(user_id, f"–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –∞–¥–º–∏–Ω–∞ –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—É—é —Ä–æ–ª—å\n\n{ask_message}",
                                          self.get_keyboard("back_menu"))
                else:
                    self.send_message(user_id, "–ù–æ–º–µ—Ä —Ä–æ–ª–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º –∏–ª–∏ –±—ã—Ç—å –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ"
                                               f" –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–æ–ª–µ–π\n\n{ask_message}", self.get_keyboard("back_menu"))
            else:
                self.send_message(user_id, f"–í–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ\n\n{ask_message}",
                                  self.get_keyboard("back_menu"))

        elif payload["text"] == "–ù–∞–∑–∞–¥":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤...", self.get_keyboard("members_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MEMBERS_SETTINGS.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

    def s_delete_member_members_settings_handler(self, user_id: int, message: str, payload: dict) -> None:
        """Handling States.S_DELETE_MEMBER_MEMBERS_SETTINGS"""
        if payload is None:
            ask_message = "–í–ø–∏—à–∏ –Ω–æ–º–µ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞, —É–¥–∞–ª–∏—Ç—å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ:"

            if message.isdigit():
                classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
                members_dictionary = self.classroom_db.get_dict_of_classroom_users(classroom_id)
                member_index = int(message) - 1

                if 0 <= member_index < len(members_dictionary):
                    roles_dictionary = self.classroom_db.get_dict_of_classroom_roles(classroom_id)
                    admin_role_id = self.role_db.get_admin_role_id(classroom_id)

                    ind = 0
                    for role_id, member_ids in roles_dictionary.items():
                        for member_id in member_ids:
                            if ind == member_index:
                                if role_id != admin_role_id and member_id != user_id:
                                    self.classroom_db.delete_student(classroom_id, member_id)
                                    new_roles_dictionary = self.classroom_db.get_dict_of_classroom_roles(classroom_id)
                                    new_members_text = self.get_members_text(new_roles_dictionary)

                                    self.send_message(user_id,
                                                      f"{new_members_text}\n\n–£—á–∞—Å—Ç–Ω–∏–∫ —É–¥–∞–ª—ë–Ω!\n\n{ask_message}",
                                                      self.get_keyboard("back_menu"))
                                elif member_id == user_id:
                                    self.send_message(user_id, f"–¢—ã –ø—ã—Ç–∞–µ—à—å—Å—è –≤—ã–≥–Ω–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è\n\n{ask_message}",
                                                      self.get_keyboard("back_menu"))
                                elif role_id == admin_role_id:
                                    self.send_message(user_id, f"–ù–µ–ª—å–∑—è –≤—ã–≥–Ω–∞—Ç—å –∞–¥–º–∏–Ω–∞\n\n{ask_message}",
                                                      self.get_keyboard("back_menu"))
                                break
                            ind += 1
                        else:
                            continue
                        break

                else:
                    self.send_message(user_id, f"–ß–∏—Å–ª–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º –∏–ª–∏ –±—ã—Ç—å –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ "
                                               f"—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n\n{ask_message}", self.get_keyboard("back_menu"))
            else:
                self.send_message(user_id, f"–í–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ\n\n{ask_message}",
                                  self.get_keyboard("back_menu"))

        elif payload["text"] == "–ù–∞–∑–∞–¥":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤...", self.get_keyboard("members_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MEMBERS_SETTINGS.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

    def s_choose_role_members_settings_handler(self, user_id: int, message: str,  payload: dict) -> None:
        """Handling States.S_CHOOSE_ROLE_MEMBERS_SETTINGS"""
        if payload is None:
            ask_message = "–í–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–æ–ª–∏, –Ω–∞–∑–Ω–∞—á–∞—Ç—å –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ:"

            classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
            all_role_names = self.role_db.get_all_role_names_from_classroom(classroom_id)
            admin_role_name = self.role_db.get_admin_role_name(classroom_id)
            default_role_name = self.role_db.get_default_role_name(classroom_id)
            all_role_names_text = self.get_all_role_names_text(all_role_names, admin_role_name, default_role_name)

            if message.isdigit():
                role_index = int(message)

                if 0 < role_index <= len(all_role_names):
                    role_name = all_role_names[role_index - 1]
                    admin_role_id = self.role_db.get_admin_role_id(classroom_id)
                    role_id = self.role_db.get_role_id_by_name(classroom_id, role_name)

                    if role_id == admin_role_id:
                        self.send_message(user_id, "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∫–æ–≥–æ-—Ç–æ —Ä–æ–ª—å—é –∞–¥–º–∏–Ω–∞? –ü–æ—Å–ª–µ "
                                                   "–Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≤—ã –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç–µ –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º –∏ –≤–æ–∑—å–º—ë—Ç–µ –¥–µ—Ñ–æ–ª—Ç–Ω—É—é —Ä–æ–ª—å",
                                          self.get_keyboard("main_dangerous_zone_delete_one_classroom_settings"))
                        self.user_db.set_user_dialog_state(
                            user_id, States.S_CHOOSE_ADMIN_ROLE_CONFIRMATION_MEMBERS_SETTINGS.value)
                    else:
                        roles_dictionary = self.classroom_db.get_dict_of_classroom_roles(classroom_id)
                        members_text = self.get_members_text(roles_dictionary)

                        self.send_message(user_id, f"{members_text}\n\n–í–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ "
                                                   f"–Ω–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å - {role_name}", self.get_keyboard("back_menu"))
                        self.user_db.set_user_dialog_state(user_id,
                                                           States.S_CHOOSE_MEMBER_CHANGE_ROLE_MEMBERS_SETTINGS.value)
                    self.role_db.update_user_customize_role_id(user_id, role_id)
                else:
                    self.send_message(user_id, f"{all_role_names_text}\n\n–ù–æ–º–µ—Ä —Ä–æ–ª–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º"
                                               f" –∏–ª–∏ –±—ã—Ç—å –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–æ–ª–µ–π\n\n{ask_message}",
                                      self.get_keyboard("back_menu"))
            else:
                self.send_message(user_id, f"{all_role_names_text}\n\n–í–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ\n\n{ask_message}",
                                  self.get_keyboard("back_menu"))

        elif payload["text"] == "–ù–∞–∑–∞–¥":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤...", self.get_keyboard("members_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MEMBERS_SETTINGS.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

    def s_choose_admin_role_confirmation_members_settings_handler(self, user_id: int, payload: dict) -> None:
        """Handling States.S_CHOOSE_ADMIN_ROLE_CONFIRMATION_MEMBERS_SETTINGS"""
        if payload is None:
            self.send_message(user_id, "–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏!üëáüèª",
                              self.get_keyboard("main_dangerous_zone_delete_one_classroom_settings"))

        elif payload["text"] == "–ù–µ—Ç":
            classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
            all_role_names = self.role_db.get_all_role_names_from_classroom(classroom_id)
            admin_role_name = self.role_db.get_admin_role_name(classroom_id)
            default_role_name = self.role_db.get_default_role_name(classroom_id)
            all_role_names_text = self.get_all_role_names_text(all_role_names, admin_role_name, default_role_name)

            self.send_message(user_id, f"{all_role_names_text}\n\n–í–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–æ–ª–∏, –Ω–∞–∑–Ω–∞—á–∞—Ç—å –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ:",
                              self.get_keyboard("back_menu"))
            self.role_db.update_user_customize_role_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_CHOOSE_ROLE_MEMBERS_SETTINGS.value)

        elif payload["text"] == "–î–∞":
            classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
            admin_role_name = self.role_db.get_admin_role_name(classroom_id)
            roles_dictionary = self.classroom_db.get_dict_of_classroom_roles(classroom_id)
            members_text = self.get_members_text(roles_dictionary)

            self.send_message(user_id, f"{members_text}\n\n–í–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ "
                                       f"–Ω–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å - {admin_role_name}", self.get_keyboard("back_menu"))
            self.user_db.set_user_dialog_state(user_id,
                                               States.S_CHOOSE_MEMBER_CHANGE_ROLE_MEMBERS_SETTINGS.value)

    def s_choose_member_change_role_members_settings_handler(self, user_id: int, message: str, payload: dict) -> None:
        """Handling States.S_CHOOSE_MEMBER_CHANGE_ROLE_MEMBERS_SETTINGS"""
        if payload is None:
            new_role_id = self.role_db.get_customizing_role_id(user_id)
            role_name = self.role_db.get_role_name(new_role_id)
            ask_message = f"–í–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å - {role_name}"

            if message.isdigit():
                classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
                members_dictionary = self.classroom_db.get_dict_of_classroom_users(classroom_id)
                member_index = int(message) - 1

                if 0 <= member_index < len(members_dictionary):
                    roles_dictionary = self.classroom_db.get_dict_of_classroom_roles(classroom_id)
                    members_text = self.get_members_text(roles_dictionary)

                    ind = 0
                    for role_id, member_ids in roles_dictionary.items():
                        for member_id in member_ids:
                            if ind == member_index:
                                admin_role_id = self.role_db.get_admin_role_id(classroom_id)

                                if member_id != user_id and role_id != new_role_id:
                                    self.role_db.update_student_role(member_id, new_role_id)

                                    if admin_role_id == new_role_id:
                                        default_role_id = self.role_db.get_default_role_id(classroom_id)
                                        self.role_db.update_student_role(user_id, default_role_id)

                                    new_roles_dictionary = self.classroom_db.get_dict_of_classroom_roles(classroom_id)
                                    new_members_text = self.get_members_text(new_roles_dictionary)

                                    if admin_role_id == new_role_id:
                                        self.send_message(user_id,
                                                          f"{new_members_text}\n\n–ù–æ–≤–∞—è —Ä–æ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∞!\n\n–í—ã"
                                                          f" –±–æ–ª—å—à–µ –Ω–µ –∞–¥–º–∏–Ω", self.get_keyboard("members_settings"))
                                        self.role_db.update_user_customize_role_id(user_id, "null")
                                        self.user_db.set_user_dialog_state(user_id, States.S_MEMBERS_SETTINGS.value)
                                    else:
                                        self.send_message(user_id,
                                                          f"{new_members_text}\n\n–ù–æ–≤–∞—è —Ä–æ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∞!"
                                                          f"\n\n{ask_message}", self.get_keyboard("back_menu"))
                                elif member_id == user_id:
                                    self.send_message(user_id, f"{members_text}–¢—ã –Ω–µ –º–æ–∂–µ—à—å –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç—å —Å–∞–º–æ–º—É —Å–µ–±–µ "
                                                               f"—Ä–æ–ª—å\n\n{ask_message}", self.get_keyboard("back_menu"))
                                elif role_id == new_role_id:
                                    self.send_message(user_id, f"{members_text}\n\n–£ —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —É–∂–µ —ç—Ç–∞ —Ä–æ–ª—å!"
                                                               f"\n\n{ask_message}", self.get_keyboard("back_menu"))
                                break
                            ind += 1
                        else:
                            continue
                        break

                else:
                    self.send_message(user_id, f"–ß–∏—Å–ª–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º –∏–ª–∏ –±—ã—Ç—å –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ "
                                               f"—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n\n{ask_message}", self.get_keyboard("back_menu"))
            else:
                self.send_message(user_id, f"–í–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ\n\n{ask_message}",
                                  self.get_keyboard("back_menu"))

        elif payload["text"] == "–ù–∞–∑–∞–¥":
            classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
            all_role_names = self.role_db.get_all_role_names_from_classroom(classroom_id)
            admin_role_name = self.role_db.get_admin_role_name(classroom_id)
            default_role_name = self.role_db.get_default_role_name(classroom_id)
            all_role_names_text = self.get_all_role_names_text(all_role_names, admin_role_name, default_role_name)

            self.send_message(user_id, f"{all_role_names_text}\n\n–í–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–æ–ª–∏, –Ω–∞–∑–Ω–∞—á–∞—Ç—å –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ:",
                              self.get_keyboard("back_menu"))
            self.role_db.update_user_customize_role_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_CHOOSE_ROLE_MEMBERS_SETTINGS.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.role_db.update_user_customize_role_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

    def s_choose_role_edit_role_members_settings_handler(self, user_id: int, message: str, payload: dict) -> None:
        """Handling States.S_EDIT_ROLE_MEMBERS_SETTINGS"""
        if payload is None:
            ask_message = "–í–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–æ–ª–∏, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ:"

            classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
            all_role_names = self.role_db.get_all_role_names_from_classroom(classroom_id)
            admin_role_name = self.role_db.get_admin_role_name(classroom_id)
            default_role_name = self.role_db.get_default_role_name(classroom_id)
            all_role_names_text = self.get_all_role_names_text(all_role_names, admin_role_name, default_role_name)

            if message.isdigit():
                role_index = int(message)

                if 0 < role_index <= len(all_role_names):
                    role_name = all_role_names[role_index - 1]
                    role_id = self.role_db.get_role_id_by_name(classroom_id, role_name)
                    self.role_db.update_user_customize_role_id(user_id, role_id)

                    self.send_message(user_id, f"–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–æ–ª–∏ - {role_name}")
                else:
                    self.send_message(user_id, f"{all_role_names_text}\n\n–ù–æ–º–µ—Ä —Ä–æ–ª–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º"
                                               f" –∏–ª–∏ –±—ã—Ç—å –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–æ–ª–µ–π\n\n{ask_message}",
                                      self.get_keyboard("back_menu"))
            else:
                self.send_message(user_id, f"{all_role_names_text}\n\n–í–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ\n\n{ask_message}",
                                  self.get_keyboard("back_menu"))

        elif payload["text"] == "–ù–∞–∑–∞–¥":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤...", self.get_keyboard("members_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MEMBERS_SETTINGS.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)
