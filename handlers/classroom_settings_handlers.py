from supporting_functions import *
from states import States


class ClassroomSettingsHandlers(SupportingFunctions):
    def __init__(self, token: str, group_id: int, user_db: UserDataCommands,
                 classroom_db: ClassroomCommands, technical_support_db: TechnicalSupportCommands,
                 diary_homework_db: DiaryHomeworkCommands, role_db: RoleCommands) -> None:
        """Initialization"""
        super().__init__(token=token, group_id=group_id, user_db=user_db, classroom_db=classroom_db,
                         technical_support_db=technical_support_db, diary_homework_db=diary_homework_db,
                         role_db=role_db)

    def s_classroom_settings_handler(self, user_id: int, payload: dict) -> None:
        """Handling States.S_CLASSROOM_SETTINGS"""
        if payload is None:
            self.send_message(user_id, "–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏!üëáüèª", self.get_keyboard("classroom_settings"))

        elif payload["text"] == "–û—Å–Ω–æ–≤–Ω—ã–µ":
            self.send_message(user_id, "–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞—Å—Å–∞", self.get_keyboard("main_classroom_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ù–∞–∑–∞–¥":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é –∫–ª–∞—Å—Å–∞...", self.get_keyboard("my_class_menu"))
            self.user_db.set_user_dialog_state(user_id, States.S_IN_CLASS_MYCLASSES.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

    def s_main_classroom_settings_handler(self, user_id: int, payload: dict) -> None:
        """Handling States.S_MAIN_CLASSROOM_SETTINGS"""
        if payload is None:
            self.send_message(user_id, "–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏!üëáüèª",
                              self.get_keyboard("main_classroom_settings"))

        elif payload["text"] == "–¢–∏–ø –∫–ª–∞—Å—Å–∞":
            keyboard_type_dictionary = {
                "–ü—É–±–ª–∏—á–Ω—ã–π": "access_menu_back_public",
                "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è": "access_menu_back_invite",
                "–ó–∞–∫—Ä—ã—Ç—ã–π": "access_menu_back_close"
            }
            classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
            access = self.classroom_db.get_classroom_access(classroom_id)
            keyboard_type = keyboard_type_dictionary[access]

            self.send_message(user_id, "–í—ã–±–µ—Ä–µ—Ç–µ –Ω–æ–≤—ã–π —Ç–∏–ø –∫–ª–∞—Å—Å–∞ (–∑–µ–ª–µ–Ω—ã–º –ø–æ–∫—Ä–∞—à–µ–Ω —Ç–µ–∫—É—â–∏–π —Ç–∏–ø):",
                              self.get_keyboard(keyboard_type))
            self.user_db.set_user_dialog_state(user_id, States.S_ACCESS_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞":
            self.send_message(user_id, "–í–ø–∏—à–∏ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ (–¥–ª–∏–Ω–∞ –Ω–µ –±–æ–ª–µ–µ 12 —Å–∏–º–≤–æ–ª–æ–≤):",
                              self.get_keyboard("back_menu"))
            self.user_db.set_user_dialog_state(user_id, States.S_CLASSROOM_NAME_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ù–∞–∑–≤–∞–Ω–∏–µ —à–∫–æ–ª—ã":
            self.send_message(user_id, "–í–ø–∏—à–∏ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∫–æ–ª—ã (–¥–ª–∏–Ω–∞ –Ω–µ –±–æ–ª–µ–µ 32 —Å–∏–º–≤–æ–ª–∞):",
                              self.get_keyboard("back_menu"))
            self.user_db.set_user_dialog_state(user_id, States.S_SCHOOL_NAME_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–û–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞":
            self.send_message(user_id, "–ù–∞–ø–∏—à–∏ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ (–¥–ª–∏–Ω–∞ –Ω–µ –±–æ–ª–µ–µ 200 —Å–∏–º–≤–æ–ª–æ–≤):",
                              self.get_keyboard("back_menu"))
            self.user_db.set_user_dialog_state(user_id, States.S_DESCRIPTION_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤":
            classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
            members_limit = self.classroom_db.get_classroom_members_limit(classroom_id)

            self.send_message(user_id, f"–¢–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {members_limit}\n\n"
                                       f"–í–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–µ —á–∏—Å–ª–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ "
                                       f"—Ç–µ–∫—É—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 40)",
                              self.get_keyboard("back_menu"))
            self.user_db.set_user_dialog_state(user_id, States.S_LIMIT_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞":
            self.send_message(user_id, "–ú–µ—Å—Ç–æ, –≥–¥–µ —Å—Ç–æ–∏—Ç –±—ã—Ç—å –ø–æ–æ—Å—Ç–æ—Ä–æ–∂–Ω–µ–µ",
                              self.get_keyboard("main_dangerous_zone_classroom_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MAIN_DANGEROUS_ZONE_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ù–∞–∑–∞–¥":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞—Å—Å–∞...", self.get_keyboard("classroom_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

    def s_main_dangerous_zone_classroom_settings_handler(self, user_id: int, payload: dict) -> None:
        """Handling States.S_MAIN_DANGEROUS_ZONE_CLASSROOM_SETTINGS"""
        if payload is None:
            self.send_message(user_id, "–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏!üëáüèª",
                              self.get_keyboard("main_dangerous_zone_classroom_settings"))

        elif payload["text"] == "–£–¥–∞–ª–∏—Ç—å –∫–ª–∞—Å—Å":
            self.send_message(user_id, "–¢—ã —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å –∫–ª–∞—Å—Å?",
                              self.get_keyboard("main_dangerous_zone_delete_one_classroom_settings"))
            self.user_db.set_user_dialog_state(user_id,
                                               States.S_MAIN_DANGEROUS_ZONE_DELETE_ONE_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ù–∞–∑–∞–¥":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞—Å—Å–∞...",
                              self.get_keyboard("main_classroom_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

    def s_main_dangerous_zone_delete_one_classroom_settings_handler(self, user_id: int, payload: dict) -> None:
        """Handling States.S_MAIN_DANGEROUS_ZONE_DELETE_ONE_CLASSROOM_SETTINGS"""
        if payload is None:
            self.send_message(user_id, "–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏!üëáüèª",
                              self.get_keyboard("main_dangerous_zone_delete_one_classroom_settings"))

        elif payload["text"] == "–î–∞":
            self.send_message(user_id, "–ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ",
                              self.get_keyboard("main_dangerous_zone_delete_two_classroom_settings"))
            self.user_db.set_user_dialog_state(user_id,
                                               States.S_MAIN_DANGEROUS_ZONE_DELETE_TWO_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ù–µ—Ç":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ–ø–∞—Å–Ω—É—é –∑–æ–Ω—É...",
                              self.get_keyboard("main_dangerous_zone_classroom_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MAIN_DANGEROUS_ZONE_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

    def s_main_dangerous_zone_delete_two_classroom_settings_handler(self, user_id: int, payload: dict) -> None:
        """Handling States.S_MAIN_DANGEROUS_ZONE_DELETE_TWO_CLASSROOM_SETTINGS"""
        if payload is None:
            self.send_message(user_id, "–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏!üëáüèª",
                              self.get_keyboard("main_dangerous_zone_delete_two_classroom_settings"))

        elif payload["text"] == "–£–¥–∞–ª–∏—Ç—å":
            classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
            classroom_name = self.classroom_db.get_classroom_name(classroom_id)
            self.classroom_db.delete_classroom(classroom_id)

            self.send_message(user_id, f"–ö–ª–∞—Å—Å —Å –∏–º–µ–Ω–µ–º {classroom_name} —É–¥–∞–ª—ë–Ω!", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

        elif payload["text"] == "–ù–µ —É–¥–∞–ª—è—Ç—å":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ–ø–∞—Å–Ω—É—é –∑–æ–Ω—É...",
                              self.get_keyboard("main_dangerous_zone_classroom_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MAIN_DANGEROUS_ZONE_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

    def s_access_main_classroom_settings_handler(self, user_id: int, payload: dict) -> None:
        """Handling States.S_ACCESS_MAIN_CLASSROOM_SETTINGS"""
        if payload is None:
            keyboard_type_dictionary = {
                "–ü—É–±–ª–∏—á–Ω—ã–π": "access_menu_back_public",
                "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è": "access_menu_back_invite",
                "–ó–∞–∫—Ä—ã—Ç—ã–π": "access_menu_back_close"
            }
            classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
            access = self.classroom_db.get_classroom_access(classroom_id)
            keyboard_type = keyboard_type_dictionary[access]

            self.send_message(user_id, "–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏!üëáüèª", self.get_keyboard(keyboard_type))

        elif payload["text"] in ["–ü—É–±–ª–∏—á–Ω—ã–π", "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è", "–ó–∞–∫—Ä—ã—Ç—ã–π"]:
            classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
            self.classroom_db.update_classroom_access(classroom_id, payload["text"])

            self.send_message(user_id, f"–¢–∏–ø –∫–ª–∞—Å—Å–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {payload['text']}!",
                              self.get_keyboard("main_classroom_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ù–∞–∑–∞–¥":
            self.send_message(user_id, "–ù–∞–∑–∞–¥ –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º...", self.get_keyboard("main_classroom_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

    def s_classroom_name_main_classroom_settings_handler(self, user_id: int, message: str, payload: dict) -> None:
        """Handling States.S_CLASSROOM_NAME_MAIN_CLASSROOM_SETTINGS"""
        if payload is None:
            if len(message) > 12:
                self.send_message(user_id, "–î–ª–∏–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç 12 —Å–∏–º–≤–æ–ª–æ–≤. –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:",
                                  self.get_keyboard("back_menu"))
            else:
                classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
                self.classroom_db.update_classroom_name(classroom_id, message)

                self.send_message(user_id, f"–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞: {message}",
                                  self.get_keyboard("main_classroom_settings"))
                self.user_db.set_user_dialog_state(user_id, States.S_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ù–∞–∑–∞–¥":
            self.send_message(user_id, "–ù–∞–∑–∞–¥ –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º...", self.get_keyboard("main_classroom_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

    def s_school_name_main_classroom_settings_handler(self, user_id: int, message: str, payload: dict) -> None:
        """Handling States.S_SCHOOL_NAME_MAIN_CLASSROOM_SETTINGS"""
        if payload is None:
            if len(message) > 32:
                self.send_message(user_id, "–î–ª–∏–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç 32 —Å–∏–º–≤–æ–ª–∞. –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:",
                                  self.get_keyboard("back_menu"))
            else:
                classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
                self.classroom_db.update_school_name(classroom_id, message)

                self.send_message(user_id, f"–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∫–æ–ª—ã: {message}",
                                  self.get_keyboard("main_classroom_settings"))
                self.user_db.set_user_dialog_state(user_id, States.S_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ù–∞–∑–∞–¥":
            self.send_message(user_id, "–ù–∞–∑–∞–¥ –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º...", self.get_keyboard("main_classroom_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

    def s_description_main_classroom_settings_handler(self, user_id: int, message: str, payload: dict) -> None:
        """Handling States.S_DESCRIPTION_MAIN_CLASSROOM_SETTINGS"""
        if payload is None:
            if len(message) > 200:
                self.send_message(user_id, "–î–ª–∏–Ω–∞ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç 200 —Å–∏–º–≤–æ–ª–æ–≤. –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:",
                                  self.get_keyboard("back_menu"))
            else:
                classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
                self.classroom_db.update_classroom_description(classroom_id, message)

                self.send_message(user_id, f"–ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞: {message}",
                                  self.get_keyboard("main_classroom_settings"))
                self.user_db.set_user_dialog_state(user_id, States.S_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ù–∞–∑–∞–¥":
            self.send_message(user_id, "–ù–∞–∑–∞–¥ –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º...", self.get_keyboard("main_classroom_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)

    def s_limit_main_classroom_settings_handler(self, user_id: int, message: str, payload: dict) -> None:
        """Handling States.S_LIMIT_MAIN_CLASSROOM_SETTINGS"""
        if payload is None:
            ask_message = f"–í–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–µ —á–∏—Å–ª–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ " \
                          f"—Ç–µ–∫—É—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 40)"

            if message.strip().isdigit():
                new_members_limit = int(message.strip())

                classroom_id = self.classroom_db.get_customizing_classroom_id(user_id)
                members_count = len(self.classroom_db.get_dict_of_classroom_users(classroom_id))
                old_members_limit = self.classroom_db.get_classroom_members_limit(classroom_id)

                if new_members_limit == old_members_limit:
                    self.send_message(user_id, f"–¢–∞–∫–æ–π –ª–∏–º–∏—Ç —É–∂–µ –∏ —Ç–∞–∫ –∑–∞–¥–∞–Ω\n\n{ask_message}",
                                      self.get_keyboard("back_menu"))
                elif members_count <= new_members_limit <= 40:
                    self.classroom_db.update_classroom_members_limit(classroom_id, new_members_limit)

                    self.send_message(user_id, "–ù–æ–≤—ã–π –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!",
                                      self.get_keyboard("main_classroom_settings"))
                    self.user_db.set_user_dialog_state(user_id, States.S_MAIN_CLASSROOM_SETTINGS.value)
                else:
                    self.send_message(user_id, f"–í–≤–µ–¥–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–ª-–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–ª–∏ –±–æ–ª—å—à–µ 40\n\n"
                                               f"{ask_message}", self.get_keyboard("back_menu"))
            else:
                self.send_message(user_id, f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø–∏—Å–∏\n\n{ask_message}", self.get_keyboard("back_menu"))

        elif payload["text"] == "–ù–∞–∑–∞–¥":
            self.send_message(user_id, "–ù–∞–∑–∞–¥ –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º...", self.get_keyboard("main_classroom_settings"))
            self.user_db.set_user_dialog_state(user_id, States.S_MAIN_CLASSROOM_SETTINGS.value)

        elif payload["text"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...", self.get_keyboard("menu"))
            self.classroom_db.update_user_customize_classroom_id(user_id, "null")
            self.user_db.set_user_dialog_state(user_id, States.S_NOTHING.value)
